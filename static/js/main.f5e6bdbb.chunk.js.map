{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Feedback/Feedback.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Buttons","options","onLeaveFeedback","className","styles","feedback__buttons","map","option","feedback__button","type","onClick","Statistics","values","totalCount","percentage","feedback__statsList","good","neutral","bad","positive","negative","Section","title","children","Notification","message","App","state","Object","keys","handleIncrement","value","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","container","FeedbackOptions","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,SAAW,6BAA6B,SAAW,+B,iBCAnID,EAAOC,QAAU,CAAC,kBAAoB,2CAA2C,iBAAmB,4C,oBCApGD,EAAOC,QAAU,CAAC,UAAY,8B,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,sNCuBbC,EApBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACd,qBAAKC,UAAWC,IAAOC,kBAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBAEEJ,UAAWC,IAAOI,iBAClBC,KAAK,SACLC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GALIA,S,gBCmBEI,EAvBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,WAAvB,OACjB,mCACE,qBAAIX,UAAWC,IAAOW,oBAAtB,UACE,wCAAWH,EAAOI,QAClB,2CAAcJ,EAAOK,WACrB,uCAAUL,EAAOM,OACjB,yCAAYL,KACZ,oDACqB,IACnB,uBAAMV,UAAWW,GAAc,GAAKV,IAAOe,SAAWf,IAAOgB,SAA7D,UACGN,EADH,gB,iBCEOO,EAXC,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,EAAeC,EAAf,EAAeA,SAAf,OACd,qCACGD,GAAS,oBAAInB,UAAWC,IAAOkB,MAAtB,SAA8BA,IACvCC,M,iBCKUC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGtB,UAAWC,IAAOqB,QAArB,SAA+BA,KCG3BC,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPjB,QAAU2B,OAAOC,KAAK,EAAKF,O,EAE3BG,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAQE,EAAUF,GAAS,O,EAIhCG,mBAAqB,WACnB,OAAO,EAAKP,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,K,EAG3DiB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKV,MAAMX,KAAO,EAAKkB,qBAAwB,M,4CAGpE,WACE,OACE,mCACE,qBAAK/B,UAAU,MAAf,SACE,sBAAKA,UAAWC,IAAOkC,UAAvB,UACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAACiB,EAAD,CACEtC,QAASuC,KAAKvC,QACdC,gBAAiBsC,KAAKV,oBAI1B,cAAC,EAAD,CAASR,MAAM,aAAf,SACGkB,KAAKN,qBAAuB,EAC3B,cAAC,EAAD,CACEtB,OAAQ4B,KAAKb,MACbd,WAAY2B,KAAKN,qBACjBpB,WAAY0B,KAAKL,oCAGnB,cAAC,EAAD,CAAcV,QAAQ,mC,GA3CpBgB,aAsDHf,ICxDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f5e6bdbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__statsList\":\"Statistics_feedback__statsList__6LCe4\",\"positive\":\"Statistics_positive__cwiix\",\"negative\":\"Statistics_negative__1r20W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__buttons\":\"FeedbackOptions_feedback__buttons__2g9SA\",\"feedback__button\":\"FeedbackOptions_feedback__button__bpSXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__1qRlv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1IKP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__rVcTV\"};","import React from 'react';\nimport styles from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({ options, onLeaveFeedback }) => (\n  <div className={styles.feedback__buttons}>\n    {options.map(option => (\n      <button\n        key={option}\n        className={styles.feedback__button}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\n\nButtons.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ values, totalCount, percentage }) => (\n  <>\n    <ul className={styles.feedback__statsList}>\n      <li>Good: {values.good}</li>\n      <li>Neutral: {values.neutral}</li>\n      <li>Bad: {values.bad}</li>\n      <li>Total: {totalCount}</li>\n      <li>\n        Positive feedback:{' '}\n        <span className={percentage >= 50 ? styles.positive : styles.negative}>\n          {percentage}%\n        </span>\n      </li>\n    </ul>\n  </>\n);\n\nStatistics.propTypes = {\n  values: PropTypes.object,\n  totalCount: PropTypes.number,\n  percentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title = '', children }) => (\n  <>\n    {title && <h2 className={styles.title}>{title}</h2>}\n    {children}\n  </>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport styles from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <p className={styles.message}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import './App.css';\nimport React, { Component } from 'react';\nimport styles from './components/Feedback/Feedback.module.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  options = Object.keys(this.state);\n\n  handleIncrement = value => {\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <div className={styles.container}>\n            <Section title=\"Please leave feedback\">\n              <FeedbackOptions\n                options={this.options}\n                onLeaveFeedback={this.handleIncrement}\n              />\n            </Section>\n\n            <Section title=\"Statistics\">\n              {this.countTotalFeedback() > 0 ? (\n                <Statistics\n                  values={this.state}\n                  totalCount={this.countTotalFeedback()}\n                  percentage={this.countPositiveFeedbackPercentage()}\n                />\n              ) : (\n                <Notification message=\"No feedback given\" />\n              )}\n            </Section>\n          </div>\n          {/* <Feedback defaultProps={(good, neutral, bad)} /> */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}